<core:FragmentDefinition xmlns="sap.m"
  xmlns:core="sap.ui.core"
  xmlns:custom="sap.ui.yesco.mvc.controller.app.control">
  <custom:MegadropMenu horizontal="false" vertical="true" width="100%" height="300px" class="megadrop-menu-layer" visible="{/Visible}">
    <HBox items="{Children}" width="100%" height="100%" justifyContent="Center" wrap="Wrap">
      <List items="{ path: 'Children', templateShareable: false }" width="10rem" rememberSelections="false" showSeparators="None" showNoData="false">
        <headerToolbar>
          <Toolbar>
            <!-- 링크가 없는 경우 -->
            <Label text="{Mname}" visible="{= !${Mnurl} }" />
            <!-- 메뉴 이동인 경우 -->
            <Link text="{Mname}" visible="{= !!${Mnurl} &amp;&amp; !${Mepop} }" href="{ parts: [ { path: 'Mnurl' }, { path: 'Mepop' } ], formatter: '.formatMenuUrl' }" subtle="true" press=".handleMenuLink" />
            <!-- http|https|javascript로 시작되는 경우 -->
            <Link text="{Mname}" visible="{= !!${Mnurl} &amp;&amp; ${Mepop} }" href="{ parts: [ { path: 'Mnurl' }, { path: 'Mepop' } ], formatter: '.formatMenuUrl' }" subtle="true" target="{ parts: [ { path: 'Mnurl' }, { path: 'Mepop' } ], formatter: '.formatMenuTarget' }" />
          </Toolbar>
        </headerToolbar>
        <CustomListItem>
          <HBox alignItems="Center" height="20px">
            <ToggleButton type="Transparent" icon="{= ${Favor} ? 'sap-icon://favorite' : 'sap-icon://unfavorite' }" press=".toggleFavorite" pressed="{Favor}" class="icon-button menu-favorite-icon" />
            <!-- 메뉴 이동인 경우 -->
            <Link text="{Mname}" visible="{= !!${Mnurl} &amp;&amp; !${Mepop} }" href="{ parts: [ { path: 'Mnurl' }, { path: 'Mepop' } ], formatter: '.formatMenuUrl' }" subtle="true" press=".handleMenuLink" class="menu-link" />
            <!-- http|https|javascript로 시작되는 경우 -->
            <Link text="{Mname}" visible="{= !!${Mnurl} &amp;&amp; ${Mepop} }" href="{ parts: [ { path: 'Mnurl' }, { path: 'Mepop' } ], formatter: '.formatMenuUrl' }" subtle="true" target="{ parts: [ { path: 'Mnurl' }, { path: 'Mepop' } ], formatter: '.formatMenuTarget' }" class="menu-link" />
          </HBox>
        </CustomListItem>
      </List>
    </HBox>
  </custom:MegadropMenu>
</core:FragmentDefinition>